1) ÖRNEK SORU: Yazar tablosunu KEMAL UYUMAZ isimli yazarı ekleyin.

    INSERT INTO yazar(yazarad, yazarsoyad) VALUES('Kemal', 'Uyumaz')

2) Biyografi türünü tür tablosuna ekleyiniz.

    INSERT INTO tur (turadi ) VALUES('biyografi')

3) 10A sınıfı olan ÇAĞLAR ÜZÜMCÜ isimli erkek, sınıfı 9B olan LEYLA ALAGÖZ isimli kız ve sınıfı 11C olan Ayşe Bektaş isimli kız öğrencileri tek sorguda ekleyin.

    INSERT INTO ogrenci (ograd, ogrsoyad, cinsiyet, sinif )
    VALUES('ÇAĞLAR' , 'ÜZÜMCÜ' , 'E' , '10A'),
    ('LEYLA' , 'ALAGÖZ' , 'K' , '11C'),
    ('Ayşe' , 'Bektaş' , 'K' , '11C');

4) Öğrenci tablosundaki rastgele bir öğrenciyi yazarlar tablosuna yazar olarak ekleyiniz.

    INSERT INTO yazar (yazarad, yazarsoyad )
    VALUES(SELECT ograd, ogrsoyad FROM ogrenci ORDER BY RANDOM() LIMIT 1 );

5) Öğrenci numarası 10 ile 30 arasındaki öğrencileri yazar olarak ekleyiniz.

    INSERT INTO yazar (yazarad, yazarsoyad )
    VALUES(SELECT ograd, ogrsoyad FROM ogrenci WHERE ogrno BETWEEN 10 AND 30);

6) Nurettin Belek isimli yazarı ekleyip yazar numarasını yazdırınız.
(Not: Otomatik arttırmada son arttırılan değer @@IDENTITY değişkeni içinde tutulur.)

     INSERT INTO yazar (yazarad, yazarsoyad )
     VALUES('nurettin' , 'belek') SELECT @IDENTITY AS yazarno;

7) 10B sınıfındaki öğrenci numarası 3 olan öğrenciyi 10C sınıfına geçirin.

     UPDATE ogrenci SET sinif ='10C' WHERE ogrno=3

8) 9A sınıfındaki tüm öğrencileri 10A sınıfına aktarın

     UPDATE ogrenci SET sinif ='10A' WHERE sinif='9A'

9) Tüm öğrencilerin puanını 5 puan arttırın.

    UPDATE ogrenci SET puan =(puan +5 )

10) 25 numaralı yazarı silin.

    DELETE yazar WHERE yazarno=25

11) Doğum tarihi null olan öğrencileri listeleyin. (insert sorgusu ile girilen 3 öğrenci listelenecektir)

    SELECT * FROM ogrenci WHERE dtarih is null

12) Doğum tarihi null olan öğrencileri silin.

    DELETE  * FROM ogrenci WHERE dtarih is null

13) Kitap tablosunda adı a ile başlayan kitapların puanlarını 2 artırın.

    UPDATE kitap SET puan=(puan+2) WHERE kitapadi LIKE 'a%'

14) Kişisel Gelişim isimli bir tür oluşturun.

       INSERT INTO tur (turadi) VALUES('KİŞİSEL GELİŞİMİMSİ')

15) Kitap tablosundaki Başarı Rehberi kitabının türünü bu tür ile değiştirin.

    UPDATE kitap SET turno=(SELECT turno FROM tur WHERE turadi='Kişisel Gelişim')
    WHERE kitapadi='Başarı Rehberi'

16) Öğrenci tablosunu kontrol etmek amaçlı tüm öğrencileri görüntüleyen "ogrencilistesi" adında bir prosedür oluşturun.

    CREATE OR UPDATE FUNCTION ögrenciListesi() RETURNS SETOF ogrenci LANGUAGE 'sql' AS $BODY$
    SELECT * FROM ogrenci
     $BODY$

17) Öğrenci tablosuna yeni öğrenci eklemek için "ekle" adında bir prosedür oluşturun.

    CREATE OR UPDATE PROCEDURE ögrenciEkle(
    IN ograd character varying , IN ogrsoyad character varying, IN birthdate character varying , IN cinsiyet character varying , IN sinif character varying,  IN puan integer
    ) LANGUAGE 'sql'
    AS $BODY$
    INSERT INTO ogrenci(ograd, ogrsoyad, dtarih, cinsiyet, sinif, puan)
    VALUES(ograd, ogrsoyad, birthdate, cinsiyet, sinif)
     $BODY$

18) Öğrenci noya göre öğrenci silebilmeyi sağlayan "sil" adında bir prosedür oluşturun.

    CREATE OR UPDATE PROCEDURE ögrenciSil(IN ogrenciNo integer) LANGUAGE 'sql'
    AS $BODY$
    DELETE ogrenci WHERE ogno=ogrenciNo
     $BODY$

19) Öğrenci numarasını kullanarak kolay bir biçimde öğrencinin sınıfını değiştirebileceğimiz bir prosedür oluşturun.

    CREATE OR UPDATE PROCEDURE updateOgrenciSinif(IN ogrenciNo integer , In yeniSinif character varying) LANGUAGE 'sql'
    AS $BODY$
    UPDATE ogrenci SET sinif = yeniSinif WHERE ogrno=ogrenciNo
     $BODY$

20) Öğrenci adı ve soyadını "Ad Soyad" olarak birleştirip, ad soyada göre kolayca arama yapmayı sağlayan bir prosedür yazın.

    CREATE OR UPDATE PROCEDURE searchFullname(fullname character varying)
    RETURNS SETOFF
    LANGUAGE 'sql'
    AS $BODY$
    SELECT * FROM ogrenci
    WHERE CONCAT(ograd ' ' ogrsoyad) ILIKE ('%', fullname'%')
     $BODY$
21) Daha önceden oluşturduğunu tüm prosedürleri silin.

    DROP PROCEDURE IF EXİST searchFullname
    DROP PROCEDURE IF EXİST updateOgrenciSinif
    DROP PROCEDURE IF EXİST ögrenciSil
    DROP PROCEDURE IF EXİST ögrenciEkle
    DROP PROCEDURE IF EXİST ögrenciListesi

#Esnek görevler (Esnek görevlerin hepsini Select in Select ile gerçekleştirmeniz beklenmektedir.)
22) Select in select yöntemiyle dram türündeki kitapları listeleyiniz.

    SELECT * FROM kitap WHERE turno= (SELECT turno FROM tur WHERE turadi='DRAM')

23) Adı e harfi ile başlayan yazarların kitaplarını listeleyin.

    SELECT * FROM kitap WHERE yazarno= (SELECT yazarno FROM yazar WHERE yazarad LIKE 'E%')

24) Kitap okumayan öğrencileri listeleyiniz.

    SELECT * FROM ogrenci WHERE ogrno NOT IN  (SELECT ogrno FROM islem )

25) Okunmayan kitapları listeleyiniz

    SELECT * FROM kitap WHERE kitapno NOT IN  (SELECT kitapno FROM islem )

26) Mayıs ayında okunmayan kitapları listeleyiniz.

    select * from kitap where kitapno not in (select kitapno from islem where atarih LIKE '_____05%')



